# On OSX the PATH variable isn't exported unless "SHELL" is also set, see: http://stackoverflow.com/a/25506676
SHELL = /bin/bash
NODE_BINDIR = ../node_modules/.bin
export PATH := $(NODE_BINDIR):$(PATH)

INPUT_FILES = ..

# Where to write the files generated by this makefile.
OUTPUT_DIR = .

# Template file
TEMPLATE_FILE = ./template.pot

# Available locales.
LOCALES = de fr es it cs gl

# Name of the generated .po files for each available locale.
LOCALE_FILES = $(shell find locale -name '*.po')

# Makefile Targets
.PHONY: clean extract translations

clean:
	rm -f $(TEMPLATE_FILE);
	rm -rf locale;

extract: $(TEMPLATE_FILE)

translations: $(OUTPUT_DIR)/translations.json

# Create a main .pot template, then generate .po files for each available language.
# Thanks to Systematic: https://github.com/Polyconseil/systematic/blob/866d5a/mk/main.mk#L167-L183
$(TEMPLATE_FILE):
# Extract gettext strings from each template file and create a POT dictionary template.
# Generate .po files for each available language.
	export GETTEXT_SOURCES=`find $(INPUT_FILES)/src -name '*.vue' -o -name '*.js'`; \
	node ../node_modules/easygettext/src/extract-cli.js --attribute v-translate --output $(OUTPUT_DIR)/template.pot $$GETTEXT_SOURCES;

# Generate translations.json file from .pot template.
.PHONY: $(OUTPUT_DIR)/translations.json
$(OUTPUT_DIR)/translations.json:
	gettext-compile --output $(OUTPUT_DIR)/translations.json $(patsubst %,$(OUTPUT_DIR)/locale/%/file-picker.po,$(LOCALES));
