openapi: 3.0.0
paths:
  '/user/{user-id}':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
    get:
      summary: List all research from given user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Research'
        '404':
          description: Not Found
    post:
      summary: Add a research to user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Research'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Research'
    delete:
      summary: Remove user
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      description: 'This removes all research projects for the specified user, which means that this service delete everything about the user.'
  '/user/{user-id}/research/{research-id}':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: research-id
        in: path
        required: true
    get:
      summary: Get a research
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Research'
      description: ''
    delete:
      summary: Delete a research
      responses:
        '204':
          description: No Content
  '/user/{user-id}/research/{research-id}/exports':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: research-id
        in: path
        required: true
    get:
      summary: List Research Exports
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Port'
    post:
      summary: Create or replace a Research Export
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Port'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Port'
      description: Add or replace the given port in body.
  '/user/{user-id}/research/{research-id}/imports':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: research-id
        in: path
        required: true
    get:
      summary: List Research Imports
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Port'
    post:
      summary: Create or replace a Research Import
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Port'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Port'
      description: Add or replace the given port in body.
  '/user/{user-id}/research/{research-id}/imports/{port-id}':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: port-id
        in: path
        required: true
      - schema:
          type: string
        name: research-id
        in: path
        required: true
    get:
      summary: Get a Research Import
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
        '404':
          description: Not Found
    delete:
      summary: Delete a Research Import
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  '/user/{user-id}/research/{research-id}/exports/{port-id}':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: port-id
        in: path
        required: true
      - schema:
          type: string
        name: research-id
        in: path
        required: true
    get:
      summary: Get a Research Export
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
        '404':
          description: Not Found
    delete:
      summary: Delete a Research Export
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  '/id/{research-id}':
    parameters:
      - schema:
          type: string
        name: research-id
        in: path
        required: true
    get:
      summary: Returns the corresponding research.
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Research'
      description: ''
  '/user/{user-id}/research/{research-id}/status':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: research-id
        in: path
        required: true
    get:
      summary: Get the current status
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
    patch:
      summary: Increase status to the next value
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
      description: This endpoint push the research to the next step.
  '/user/{user-id}/research/{research-id}/researchname':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: research-id
        in: path
        required: true
    get:
      summary: Returns the name of this project
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  researchname:
                    type: string
      description: Returns the name of this project
    put:
      summary: Updates the name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  researchname:
                    type: string
        '400':
          description: Bad Request
      description: Updates the name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                researchname:
                  type: string
components:
  schemas:
    Research:
      title: Research
      description: This model represents a research.
      x-examples:
        example-1:
          id: '1'
          status: created
          import:
            - id: '1'
              port: port-owncloud
              properties:
                - type: filestorage
                  value: 'true'
          export:
            - id: '1'
              port: port-invenio
              properties:
                - type: filestorage
                  value: 'true'
                - type: metadata
                  value: 'true'
      anyOf:
        - type: object
          properties:
            userId:
              type: string
              description: This field will be set through the system.
            status:
              type: integer
              description: This field will be set through the system.
            portIn:
              type: array
              items:
                $ref: '#/components/schemas/Port'
            portOut:
              type: array
              items:
                $ref: '#/components/schemas/Port'
            researchId:
              type: integer
              description: This field will be set through the system.
            researchIndex:
              type: integer
              description: This field will be set through the system.
        - description: 'This is required, because connexion refused otherwise a connection without any requestBody.'
    Port:
      title: Port
      description: 'This model represents a port, which can be used in a research.'
      type: object
      x-examples: {}
      properties:
        port:
          type: string
        properties:
          type: array
          items:
            type: object
            properties:
              portType:
                type: string
                description: |-
                  Only "metadata" and "filestorage" are currently supported as booleans. If portType is not set, it defaults to false for metadata and fileStorage.

                  If you set 'customProperties' for portType, you can specify an array of objects as value with custom key and value as string. This is useful, if you want to save a filepath or a servicename for the port, which you wants to add to this RDS research.
              value:
                oneOf:
                  - type: boolean
                  - type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
      required:
        - port
servers:
  - url: 'http://central-service_research-manager:3000/research'
    description: ''
info:
  version: '1.0'
  title: Central Service Research Manager
  description: 'This api describes the research endpoints, which manages research and workflows.'
  contact:
    name: Peter Heiss
    email: peter.heiss@uni-muenster.de
