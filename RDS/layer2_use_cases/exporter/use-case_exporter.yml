openapi: 3.0.0
paths:
  '/user/{user-id}/research/{research-id}':
    parameters:
      - schema:
          type: string
        name: research-id
        in: path
        required: true
      - schema:
          type: string
        name: user-id
        in: path
        required: true
    get:
      summary: Returns all research files
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
    post:
      summary: Push all files in ingoing file ports to all outgoing file ports.
      responses:
        '200':
          description: OK
    delete:
      summary: Removes all files in all outgoing files port.
      responses:
        '200':
          description: OK
  '/user/{user-id}/research/{research-id}/services/{servicename}':
    parameters:
      - schema:
          type: string
        name: research-id
        in: path
        required: true
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: servicename
        in: path
        required: true
    get:
      summary: Returns all files in given port.
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
      description: ''
    post:
      summary: Push all files from specified ingoing file ports to all outgoing file ports.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
      description: |-
        If the setting "applyChanges" is not set for this research, then the following flow will be executed:
        If a file already exists in the outgoing file ports, the new file will be uploaded with a hash value (appended to the filename, ex. filename.txt -> filename.has245.txt).
    delete:
      summary: Removes all files in outgoing files port from given ingoing files port.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
  '/user/{user-id}/research/{research-id}/services/{servicename}/files/{files-id}':
    parameters:
      - schema:
          type: string
        name: research-id
        in: path
        required: true
      - schema:
          type: string
        name: files-id
        in: path
        required: true
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: servicename
        in: path
        required: true
    get:
      summary: Returns the file with id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
    post:
      summary: Push the given file-id to all outgoing file ports.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
      description: |-
        If the setting "applyChanges" is not set for this research, then the following flow will be executed:
        If a file already exists in the outgoing file ports, the new file will be uploaded with a hash value (appended to the filename, ex. filename.txt -> filename.has245.txt).
    delete:
      summary: Removes specified file in outgoing files port from given ingoing files port.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
info:
  version: '1.0'
  title: Exporter
  description: This service is responsible for any exporting functionality.
  contact:
    name: Peter Heiss
    url: 'https://www.research-data-services.org'
    email: peter.heiss@uni-muenster.de
servers:
  - url: 'http://use-case_exporter/exporter'
    description: ''
components:
  schemas:
    Research:
      title: Research
      type: object
      properties:
        researchId:
          type: string
        researchIndex:
          type: string
        services:
          $ref: '#/components/schemas/Service'
        userId:
          type: string
    File:
      title: File
      type: string
    Settings:
      title: Settings
      type: object
      properties:
        applyChanges:
          type: boolean
        autoSync:
          type: boolean
    Success:
      title: Success
      type: object
      properties:
        success:
          type: boolean
    Service:
      title: Service
      type: object
      properties:
        servicename:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/File'
