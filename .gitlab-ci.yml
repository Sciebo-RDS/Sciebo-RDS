image: zivgitlab.uni-muenster.de/sciebo-rds/dependency_proxy/containers/python:3.9

stages:
  - test
  - build
  - documentation
  - pages
  - deploy

include:
  - "/RDS/layer0_ingress/web/.gitlab-ci.yml"
  - "/RDS/layer0_ingress/official_doc/.gitlab-ci.yml"
  - "/RDS/layer1_adapters_and_ports/port_zenodo/.gitlab-ci.yml"
  - "/RDS/layer1_adapters_and_ports/port_owncloud/.gitlab-ci.yml"
  - "/RDS/layer1_adapters_and_ports/port_openscienceframework/.gitlab-ci.yml"
  - "/RDS/layer2_use_cases/exporter/.gitlab-ci.yml"
  - "/RDS/layer2_use_cases/port/.gitlab-ci.yml"
  - "/RDS/layer2_use_cases/metadata/.gitlab-ci.yml"
  - "/RDS/layer3_central_services/token_storage/.gitlab-ci.yml"
  - "/RDS/layer3_central_services/research_manager/.gitlab-ci.yml"

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  FOLDER: ./

.install_cc_tester: &install_cc_tester
  - curl -L "https://codeclimate.com/downloads/test-reporter/test-reporter-0.6.3-linux-amd64" > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - python -m pip install awscli

.deploy:
  stage: deploy

.tests:
  stage: test
  before_script:
    - cd $FOLDER
  script:
    - test -f requirements.txt && pip install -r requirements.txt
    - test -f requirements-dev.txt && pip install -r requirements-dev.txt
    - make test
  after_script:
    - *install_cc_tester
    - ./cc-test-reporter format-coverage -o coverage/$CI_COMMIT_SHORT_SHA/codeclimate.$CI_JOB_NAME.json -t coverage.py $FOLDER/coverage.xml
    - aws --endpoint-url https://radosgw.public.os.wwu.de s3 cp coverage s3://Testresults --recursive
  tags:
    - autoscaling
  rules:
    - if: "$CI_COMMIT_BRANCH == /^translations_rds-.*$/"
      when: never # ignore, if it comes from transifex
    - when: always
  # https://gitlab.com/gitlab-org/gitlab/issues/8177
  # not supported currently
  #only:
  #  refs:
  #    - branches
  #  changes:
  #    - $FOLDER/*
  #    - $FOLDER/**/*


.builds:
  image: zivgitlab.uni-muenster.de/sciebo-rds/dependency_proxy/containers/docker:20.10
  stage: build
  services:
    - name: zivgitlab.uni-muenster.de/sciebo-rds/dependency_proxy/containers/docker:20.10-dind
      alias: docker
  tags:
    - docker-in-docker
  rules:
    - if: "$CI_COMMIT_BRANCH == /^translations_rds-.*$/"
      when: never
    - when: always
  variables:
    DOCKER_DRIVER: overlay2
    CI_PROJECT_PATH: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  script: # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#using-docker-caching
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_SERVER_URL
    - docker info
    - cd $FOLDER
    - export DOCKERTAGNAME=$(echo "$CI_JOB_NAME" | cut -d":" -f2)
    - export CI_PROJECT_PATH=$CI_PROJECT_PATH/$DOCKERTAGNAME
    - export CI_IMAGE_LATEST=$CI_PROJECT_PATH:latest
    - export CI_IMAGE_SHA=$CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA
    - export CI_IMAGE_BRANCH=$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME
    - export CI_IMAGE_JOBID=$CI_PROJECT_PATH:$CI_PIPELINE_ID
    - docker pull --quiet $CI_IMAGE_BRANCH || true
    - docker build --cache-from $CI_IMAGE_BRANCH --tag $CI_IMAGE_LATEST --tag $CI_IMAGE_BRANCH  --tag $CI_IMAGE_JOBID --file="dockerfile" --build-arg git_branch=$CI_COMMIT_REF_NAME .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker info
    - docker push $CI_IMAGE_BRANCH
    - docker push $CI_IMAGE_LATEST
    - docker push $CI_IMAGE_JOBID


upload_test_coverage:
  stage: documentation
  before_script:
    - *install_cc_tester
  script:
    - mkdir -p coverage
    - ls -la coverage
    - aws --endpoint-url https://radosgw.public.os.wwu.de s3 cp s3://Testresults coverage --recursive
    - ./cc-test-reporter sum-coverage --output - coverage/$CI_COMMIT_SHORT_SHA/*.json | ./cc-test-reporter upload-coverage --input -

.documentation:
  stage: documentation
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    - if: '$CI_COMMIT_BRANCH == "release"'
    - if: "$CI_COMMIT_TAG"
    - if: "$CI_COMMIT_BRANCH == /^translations_rds-.*$/"
      when: never
  artifacts:
    untracked: true
    expire_in: 1 days
    paths:
      - docs/
  script:
    - cd $FOLDER
    - make doc

test:docusaurus:
  image:  harbor.uni-muenster.de/proxy-docker/library/node:lts-alpine
  variables:
    FOLDER: docs/
  script:
    - cd $FOLDER
    - yarn install
    - yarn build:gitlab
  stage: test
  tags:
    - autoscaling
  rules:
    - if: "$CI_COMMIT_BRANCH == /^translations_rds-.*$/"
      when: never # ignore, if it comes from transifex
    - when: always

pages:
  image: harbor.uni-muenster.de/proxy-docker/library/node:lts-alpine
  stage: pages
  # allow caching for faster deployment
  cache:
    paths:
      - node_modules/
      - .cache/
  artifacts:
    untracked: true
    paths:
      - public
  variables:
    DOC_FOLDER: .
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    - if: '$CI_COMMIT_BRANCH == "release"'
    - if: "$CI_COMMIT_TAG"
  before_script:
    - apk add --update --no-cache --allow-untrusted python3 py3-pip rsync pipx
    - python3 -m pipx install awscli
  script:
    - mkdir -p ./public
    - cd docs
    - mv ./docs/layer*.md ./docs/impl/
    - find ./docs -maxdepth 1 -name "layer*.md" -exec mv '{}' ./docs/impl/ \;
    - yarn install
    - yarn build:gitlab
    - rsync -avh ./public/ ../public/${DOC_FOLDER}
    - cd ..
