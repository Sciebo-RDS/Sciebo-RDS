image: python:3.8

stages:
  - test
  - build
  - deploy
  - documentation
  - pages

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  FOLDER: ./

.install_cc_tester: &install_cc_tester
  - curl -L "https://codeclimate.com/downloads/test-reporter/test-reporter-0.6.3-linux-amd64" > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - python -m pip install awscli

.tests:
  stage: test

  before_script:
    - cd $FOLDER
    - *install_cc_tester

  script:
    - test -f requirements.txt && pip install -r requirements.txt
    - test -f requirements-dev.txt && pip install -r requirements-dev.txt
    - make test

  after_script:
    - ./cc-test-reporter format-coverage -o coverage/codeclimate.$CI_JOB_NAME.json -t coverage.py $FOLDER/coverage.xml
    - aws --endpoint-url https://radosgw.public.os.wwu.de s3 cp coverage s3://Testresults --recursive

  tags:
    - autoscaling

  except:
    refs:
      - /^translations_plugins-.*$/i # ignore, if it comes from transifex

  # https://gitlab.com/gitlab-org/gitlab/issues/8177
  # not supported currently
  #only:
  #  refs:
  #    - branches
  #  changes:
  #    - $FOLDER/*
  #    - $FOLDER/**/*

.builds:
  image: docker:19.03

  stage: build

  services:
    - docker:dind

  tags:
    - docker-in-docker

  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    CI_PROJECT_PATH: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME

  script: # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#using-docker-caching
    - cd $FOLDER
    - export DOCKERTAGNAME=$(echo "$CI_JOB_NAME" | cut -d":" -f2)
    - export CI_PROJECT_PATH=$CI_PROJECT_PATH/$DOCKERTAGNAME
    - export CI_IMAGE_LATEST=$CI_PROJECT_PATH:latest
    - export CI_IMAGE_SHA=$CI_PROJECT_PATH:$CI_COMMIT_BRANCH
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull --quiet $CI_IMAGE_SHA || true
    - docker build --cache-from $CI_IMAGE_SHA --tag $CI_IMAGE_LATEST --tag $CI_IMAGE_SHA --file="dockerfile" .
    - docker push $CI_IMAGE_SHA
    - docker push $CI_IMAGE_LATEST

include:
  - "/RDS/circle1_adapters_and_ports/port_zenodo/.gitlab-ci.yml"
  - "/RDS/circle1_adapters_and_ports/port_owncloud/.gitlab-ci.yml"
  - "/RDS/circle2_use_cases/exporter/.gitlab-ci.yml"
  - "/RDS/circle2_use_cases/port/.gitlab-ci.yml"
  - "/RDS/circle2_use_cases/metadata/.gitlab-ci.yml"
  - "/RDS/circle3_central_services/token_storage/.gitlab-ci.yml"
  - "/RDS/circle3_central_services/research_manager/.gitlab-ci.yml"
  - template: Code-Quality.gitlab-ci.yml

code_quality:
  services:
    - docker:dind
  tags:
    - docker-in-docker
  variables:
    DOCKER_HOST: tcp://docker:2375
  stage: test
  artifacts:
    expose_as: "Code Quality Report"
    paths: [gl-code-quality-report.json]

upload_test_coverage:
  stage: documentation

  before_script:
    - *install_cc_tester

  script:
    - mkdir coverage
    - aws --endpoint-url https://radosgw.public.os.wwu.de s3 cp s3://Testresults coverage --recursive
    - ./cc-test-reporter sum-coverage --output - coverage/*.json | ./cc-test-reporter upload-coverage --input -

# All available Hugo versions are listed here: https://gitlab.com/pages/hugo/container_registry
hugo:test:
  extends: .tests
  image: registry.gitlab.com/pages/hugo:0.68.3

  variables:
    FOLDER: docs/

  before_script:
    - apk add --update --no-cache git

  script:
    - cd $FOLDER
    - hugo

  only:
    changes:
      - docs/*
      - docs/**/*

.documentation:
  stage: documentation
  only:
    refs:
      - master
  artifacts:
    untracked: true
    expire_in: 1 days
    paths:
      - docs/
  script:
    - cd $FOLDER
    - make doc

pages:
  image: registry.gitlab.com/pages/hugo:0.68.3
  stage: pages
  before_script:
    - apk add --update --no-cache git

  script:
    - cd docs
    - hugo
    - mv public ../
  artifacts:
    paths:
      - public
  only:
    - master
